{"version":3,"sources":["pages/GoogleMaps.js","components/PageTitle.js"],"names":["BasicMap","props","className","google","zoom","initialCenter","lat","lng","style","width","height","position","MapWithMarker","title","name","StreetViewMap","mapRef","map","ref","streetViewControl","onReady","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","activateStreetView","LightStyledMap","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","GoogleApiWrapper","apiKey","Fragment","breadCrumbItems","label","path","active","lg","PageTitle","to","item","index","key"],"mappings":"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","file":"static/js/97.8a99a80d.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nimport PageTitle from '../components/PageTitle';\n\nconst BasicMap = props => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Basic Google Map</h4>\n\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}></Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst MapWithMarker = props => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Google Map with Marker</h4>\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        zoom={18}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}>\n                        <Marker\n                            title={'This is sweet home.'}\n                            name={'Home sweet home!'}\n                            position={{ lat: 21.569874, lng: 71.5893798 }}></Marker>\n                    </Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst StreetViewMap = props => {\n    let mapRef = { map: {} };\n\n    /**\n     * Activate the street view\n     */\n    const activateStreetView = position => {\n        if (mapRef) {\n            const mapObj = mapRef.map.getStreetView();\n            mapObj.setPov({ heading: 34, pitch: 10 });\n            mapObj.setPosition(position);\n            mapObj.setVisible(true);\n        }\n    };\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\n\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        ref={map => (mapRef = map)}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        streetViewControl={true}\n                        onReady={() => {\n                            activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\n                        }}></Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst LightStyledMap = props => {\n    const mapStyles = [\n        { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#e9e9e9' }, { lightness: 17 }] },\n        { featureType: 'landscape', elementType: 'geometry', stylers: [{ color: '#f5f5f5' }, { lightness: 20 }] },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\n        },\n        { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: '#ffffff' }, { lightness: 18 }] },\n        { featureType: 'road.local', elementType: 'geometry', stylers: [{ color: '#ffffff' }, { lightness: 16 }] },\n        { featureType: 'poi', elementType: 'geometry', stylers: [{ color: '#f5f5f5' }, { lightness: 21 }] },\n        { featureType: 'poi.park', elementType: 'geometry', stylers: [{ color: '#dedede' }, { lightness: 21 }] },\n        { elementType: 'labels.text.stroke', stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }] },\n        { elementType: 'labels.text.fill', stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }] },\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        { featureType: 'transit', elementType: 'geometry', stylers: [{ color: '#f2f2f2' }, { lightness: 19 }] },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Ultra Light with Labels</h4>\n\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}></Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst DarkStyledMap = props => {\n    const mapStyles = [\n        { featureType: 'all', elementType: 'labels', stylers: [{ visibility: 'on' }] },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\n        },\n        { featureType: 'all', elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n        { featureType: 'administrative.country', elementType: 'labels.text.fill', stylers: [{ color: '#e5c163' }] },\n        { featureType: 'administrative.locality', elementType: 'labels.text.fill', stylers: [{ color: '#c4c4c4' }] },\n        {\n            featureType: 'administrative.neighborhood',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        { featureType: 'landscape', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 20 }] },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\n        },\n        { featureType: 'poi.business', elementType: 'geometry', stylers: [{ visibility: 'on' }] },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\n        },\n        { featureType: 'road.highway', elementType: 'geometry.stroke', stylers: [{ visibility: 'off' }] },\n        { featureType: 'road.highway', elementType: 'labels.text.fill', stylers: [{ color: '#ffffff' }] },\n        { featureType: 'road.highway', elementType: 'labels.text.stroke', stylers: [{ color: '#e5c163' }] },\n        { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 18 }] },\n        { featureType: 'road.arterial', elementType: 'geometry.fill', stylers: [{ color: '#575757' }] },\n        { featureType: 'road.arterial', elementType: 'labels.text.fill', stylers: [{ color: '#ffffff' }] },\n        { featureType: 'road.arterial', elementType: 'labels.text.stroke', stylers: [{ color: '#2c2c2c' }] },\n        { featureType: 'road.local', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 16 }] },\n        { featureType: 'road.local', elementType: 'labels.text.fill', stylers: [{ color: '#999999' }] },\n        { featureType: 'transit', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 19 }] },\n        { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 17 }] },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Dark</h4>\n\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}></Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst GoogleMaps = props => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/features/googlemaps' },\n                    { label: 'Google Maps', path: '/features/googlemaps', active: true },\n                ]}\n                title={'Google Maps'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <BasicMap google={props.google} />\n                </Col>\n\n                <Col lg={6}>\n                    <MapWithMarker google={props.google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <StreetViewMap google={props.google} />\n                </Col>\n\n                <Col lg={6}>\n                    <LightStyledMap google={props.google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <DarkStyledMap google={props.google} />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\n})(GoogleMaps);\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}