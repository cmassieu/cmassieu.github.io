{"version":3,"sources":["pages/forms/Advanced.js","components/PageTitle.js","components/Datepicker.js"],"names":["ReactSelect","className","href","classNamePrefix","options","value","label","isMulti","Typeaheads","id","labelKey","multiple","placeholder","DatePickers","lg","hideAddon","monthsShown","dateFormat","minDate","Date","maxDate","setDate","getDate","showTimeSelect","timeFormat","timeIntervals","timeCaption","showTimeSelectOnly","InputMasks","mask","FormAdvanced","Fragment","breadCrumbItems","path","active","title","PageTitle","props","to","map","item","index","key","registerLocale","es","setDefaultLocale","DatepickerInput","onDateValueChange","console","log","bind","type","onClick","this","onChange","Component","DatepickerInputWithAddon","readOnly","HyperDatepicker","handleDateSelectChange","date","setState","startDate","onChange2","state","input","customInput","selected","locale","isClearable","showMonthDropdown","showYearDropdown","dropdownMode"],"mappings":"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","file":"static/js/106.4826e347.chunk.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\n\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\nimport HyperDatepicker from '../../components/Datepicker';\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\nconst ReactSelect = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">\r\n                    <a href=\"https://github.com/JedWatson/react-select\">React select</a>\r\n                </h4>\r\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Single Selection</p>\r\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\r\n                <Select\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    options={[\r\n                        { value: 'chocolate', label: 'Chocolate' },\r\n                        { value: 'strawberry', label: 'Strawberry' },\r\n                        { value: 'vanilla', label: 'Vanilla' },\r\n                    ]}></Select>\r\n\r\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Multiple Selection</p>\r\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\r\n                <Select\r\n                    isMulti={true}\r\n                    options={[\r\n                        { value: 'chocolate', label: 'Chocolate' },\r\n                        { value: 'strawberry', label: 'Strawberry' },\r\n                        { value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"></Select>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst Typeaheads = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">\r\n                    <a href=\"http://ericgio.github.io/react-bootstrap-typeahead/\">Typeahead</a>\r\n                </h4>\r\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Single Selection</p>\r\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\r\n                <Typeahead\r\n                    id=\"select2\"\r\n                    labelKey=\"label\"\r\n                    multiple={false}\r\n                    options={[\r\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\r\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\r\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                    placeholder=\"Choose a state...\"\r\n                />\r\n\r\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Multiple Selection</p>\r\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\r\n                <Typeahead\r\n                    id=\"select3\"\r\n                    labelKey=\"label\"\r\n                    multiple={true}\r\n                    options={[\r\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\r\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\r\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                    placeholder=\"Choose a state...\"\r\n                />\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DatePickers = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\r\n                <p className=\"text-muted font-14\">\r\n                    A simple date picker using <a href=\"https://reactdatepicker.com/\">ReactJS Datepicker</a>\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Single Date</label> <br />\r\n                            <HyperDatepicker hideAddon={true} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Single Date with multiple months</label> <br />\r\n                            <HyperDatepicker hideAddon={true} monthsShown={2} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Custom date format</label> <br />\r\n                            <HyperDatepicker hideAddon={true} dateFormat=\"yyyy-MM-dd\" />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Specific date range</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                minDate={new Date()}\r\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Select Time</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                showTimeSelect\r\n                                timeFormat=\"HH:mm\"\r\n                                timeIntervals={60}\r\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                timeCaption=\"time\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Time only</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                timeIntervals={60}\r\n                                dateFormat=\"h:mm aa\"\r\n                                timeCaption=\"Time\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst InputMasks = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Input Masks</h4>\r\n                <p className=\"text-muted font-14\">\r\n                    Input masks by{' '}\r\n                    <a href=\"https://github.com/text-mask/text-mask/tree/master/react#readme\">react-text-mask</a>\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone Number with Area Code</label> <br />\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[1-9]/,\r\n                                    /\\d/,\r\n                                    ')',\r\n                                    ' ',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    '-',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                ]}\r\n                                placeholder=\"(__) ____-____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>US Phone Number</label> <br />\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[1-9]/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    ')',\r\n                                    ' ',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    '-',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                ]}\r\n                                placeholder=\"(___) ___-____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Date</label> <br />\r\n                            <MaskedInput\r\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n                                placeholder=\"__/__/____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Time</label> <br />\r\n                            <MaskedInput\r\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\r\n                                placeholder=\"__:__:__\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst FormAdvanced = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Forms', path: '/forms/advanced' },\r\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\r\n                ]}\r\n                title={'Form Advanced'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <ReactSelect />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Typeaheads />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <DatePickers />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <InputMasks />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default FormAdvanced;\r\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">e-BRS</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-datepicker';\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es);\nsetDefaultLocale('es');\n\ntype DatepickerInputProps = {\n    onClick?: PropTypes.func,\n    value?: string,\n};\nclass DatepickerInput extends Component<DatepickerInputProps> {\n    constructor(props) {\n        super(props);\n\n        this.onDateValueChange = this.onDateValueChange.bind(this);\n    }\n\n    onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    render() {\n        return (\n            <input\n                type=\"text\"\n                className=\"form-control date\"\n                id=\"dash-daterange\"\n                onClick={this.props.onClick}\n                value={this.props.value}\n                onChange={this.onDateValueChange}\n            />\n        );\n    }\n}\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: PropTypes.func,\n    value?: string,\n};\n\nclass DatepickerInputWithAddon extends Component<DatepickerInputWithAddonProps> {\n    render() {\n        return (\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control form-control-light\"\n                    id=\"dash-daterange\"\n                    onClick={this.props.onClick}\n                    value={this.props.value}\n                    readOnly\n                />\n\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text bg-primary border-primary text-white\">\n                        <i className=\"mdi mdi-calendar-range font-13\"></i>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\ntype HyperDatepickerProps = {\n    hideAddon?: boolean,\n    isClearable?: boolean,\n    onChange2?: PropTypes.func\n};\n\ntype HyperDatepickerState = {\n    startDate?: Date,\n};\n\nclass HyperDatepicker extends Component<HyperDatepickerProps, HyperDatepickerState> {\n    constructor(props: HyperDatepickerProps) {\n        super(props);\n        this.state = {\n            startDate: new Date(),\n        };\n        this.handleDateSelectChange = this.handleDateSelectChange.bind(this);\n    }\n\n    handleDateSelectChange = (date: any) => {\n        this.setState({\n            startDate: date,\n        });\n        if(this.props.onChange2)\n            this.props.onChange2(date);\n    };\n\n    render() {\n        const input = (this.props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n        return (\n            <DatePicker\n                customInput={input}\n                selected={this.state.startDate}\n                onChange={this.handleDateSelectChange}\n                {...this.props}\n                locale=\"es\"\n                isClearable={this.props.isClearable || false}\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n            />\n        );\n    }\n}\n\nexport default HyperDatepicker;\n"],"sourceRoot":""}