{"version":3,"sources":["pages/uikit/Tooltips.js","components/PageTitle.js"],"names":["Basic","className","href","id","placement","target","Direction","text","map","tooltip","i","Fragment","key","type","color","HtmlContent","Tooltips","breadCrumbItems","label","path","active","title","xl","PageTitle","props","to","item","index"],"mappings":"yGACA,0FAKMA,EAAQ,WACV,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIC,UAAU,gBAAd,YACA,uBAAGA,UAAU,sBAAb,+CAEA,uBAAGA,UAAU,cAAb,kCACoC,IAChC,uBAAGC,KAAK,IAAIC,GAAG,YAAf,gBAEK,IAJT,kLAMsF,IAClF,uBAAGD,KAAK,IAAIC,GAAG,YAAf,QAEK,IATT,mMAWwG,IACpG,uBAAGD,KAAK,IAAIC,GAAG,YAAf,YAEK,IAdT,mHAkBA,kBAAC,IAAD,CAAqBC,UAAU,MAAMC,OAAO,YAA5C,gBAGA,kBAAC,IAAD,CAAqBD,UAAU,QAAQC,OAAO,YAA9C,mBAGA,kBAAC,IAAD,CAAqBD,UAAU,SAASC,OAAO,YAA/C,2BAQVC,EAAY,WACd,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIL,UAAU,gBAAd,mBACA,uBAAGA,UAAU,sBAAb,qEAEC,CACG,CACIG,UAAW,MACXG,KAAM,OAEV,CACIH,UAAW,SACXG,KAAM,UAEV,CACIH,UAAW,OACXG,KAAM,QAEV,CACIH,UAAW,QACXG,KAAM,UAEZC,KAAI,SAACC,EAASC,GACZ,OACI,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACjB,kBAAC,IAAD,CAAQP,GAAE,kBAAaM,EAAQL,WAAaS,KAAK,SAASC,MAAM,UAAUb,UAAU,QAApF,cACgBQ,EAAQF,MAExB,kBAAC,IAAD,CAAqBH,UAAWK,EAAQL,UAAWC,OAAM,kBAAaI,EAAQL,YAA9E,cACgBK,EAAQL,kBAU9CW,EAAc,WAChB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAId,UAAU,gBAAd,aACA,uBAAGA,UAAU,sBAAb,+BAEA,kBAAC,IAAD,CAAQE,GAAG,WAAWU,KAAK,SAASC,MAAM,UAAUb,UAAU,QAA9D,0BAGA,kBAAC,IAAD,CAAqBG,UAAU,SAASC,OAAO,YAA/C,gBACiB,uBAAGH,KAAK,KAAR,YAsClBc,UA/BE,WACb,OACI,kBAAC,IAAML,SAAP,KACI,kBAAC,IAAD,CACIM,gBAAiB,CACb,CAAEC,MAAO,KAAMC,KAAM,gBACrB,CAAED,MAAO,UAAWC,KAAM,gBAC1B,CAAED,MAAO,WAAYC,KAAM,eAAgBC,QAAQ,IAEvDC,MAAO,aAGX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAI,GACL,kBAACtB,EAAD,OAEJ,kBAAC,IAAD,CAAKsB,GAAI,GACL,kBAAChB,EAAD,QAIR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKgB,GAAI,GACL,kBAACP,EAAD,OAEJ,kBAAC,IAAD,CAAKO,GAAI,Q,iCChIzB,uEA2CeC,IA9BG,SAACC,GACf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKvB,UAAU,kBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMwB,GAAG,KAAT,UAEHD,EAAMP,gBAAgBT,KAAI,SAACkB,EAAMC,GAC9B,OAAOD,EAAKN,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACR,IAAKe,GACvBD,EAAKR,OAGV,kBAAC,IAAD,CAAgBN,IAAKe,GACjB,kBAAC,IAAD,CAAMF,GAAIC,EAAKP,MAAOO,EAAKR,aAM/C,wBAAIjB,UAAU,cAAcuB,EAAMH","file":"static/js/121.fa591ae6.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody, UncontrolledTooltip, Button } from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst Basic = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Examples</h4>\n                <p className=\"text-muted font-14\">Hover over the links below to see tooltips.</p>\n\n                <p className=\"muted mb-0\">\n                    Tight pants next level keffiyeh{' '}\n                    <a href=\"/\" id=\"tooltip1\">\n                        you probably\n                    </a>{' '}\n                    haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown.\n                    Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel{' '}\n                    <a href=\"/\" id=\"tooltip2\">\n                        have\n                    </a>{' '}\n                    a terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu\n                    biodiesel williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A really ironic artisan{' '}\n                    <a href=\"/\" id=\"tooltip3\">\n                        whatever\n                    </a>{' '}\n                    keytar, scenester farm-to-table banksy Austin twitter handle freegan cred raw denim single-origin\n                    coffee viral.\n                </p>\n                <UncontrolledTooltip placement=\"top\" target=\"tooltip1\">\n                    Hello world!\n                </UncontrolledTooltip>\n                <UncontrolledTooltip placement=\"right\" target=\"tooltip2\">\n                    Another tooltip\n                </UncontrolledTooltip>\n                <UncontrolledTooltip placement=\"bottom\" target=\"tooltip3\">\n                    Another one here too\n                </UncontrolledTooltip>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Direction = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Four Directions</h4>\n                <p className=\"text-muted font-14\">Four options are available: top, right, bottom, and left aligned.</p>\n\n                {[\n                    {\n                        placement: 'top',\n                        text: 'Top',\n                    },\n                    {\n                        placement: 'bottom',\n                        text: 'Bottom',\n                    },\n                    {\n                        placement: 'left',\n                        text: 'Left',\n                    },\n                    {\n                        placement: 'right',\n                        text: 'Right',\n                    },\n                ].map((tooltip, i) => {\n                    return (\n                        <React.Fragment key={i}>\n                            <Button id={`tooltip-${tooltip.placement}`} type=\"button\" color=\"primary\" className=\"mr-1\">\n                                Tooltip on {tooltip.text}\n                            </Button>\n                            <UncontrolledTooltip placement={tooltip.placement} target={`tooltip-${tooltip.placement}`}>\n                                Tooltip on {tooltip.placement}\n                            </UncontrolledTooltip>\n                        </React.Fragment>\n                    );\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst HtmlContent = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Html Tags</h4>\n                <p className=\"text-muted font-14\">And with custom HTML added:</p>\n\n                <Button id=\"html-tag\" type=\"button\" color=\"primary\" className=\"mr-1\">\n                    Tooltip with html tags\n                </Button>\n                <UncontrolledTooltip placement=\"bottom\" target=\"html-tag\">\n                    Tooltip with <a href=\"/\">Link</a>\n                </UncontrolledTooltip>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Tooltips = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'UI', path: '/ui/tooltips' },\n                    { label: 'Base UI', path: '/ui/tooltips' },\n                    { label: 'Tooltips', path: '/ui/tooltips', active: true },\n                ]}\n                title={'Tooltips'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Basic />\n                </Col>\n                <Col xl={6}>\n                    <Direction />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <HtmlContent />\n                </Col>\n                <Col xl={6}></Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Tooltips;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">e-BRS</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}