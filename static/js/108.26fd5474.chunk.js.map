{"version":3,"sources":["pages/uikit/Tabs.js","components/PageTitle.js"],"names":["Tabs","Component","constructor","props","super","toggle","tab","this","state","activeTab","setState","bind","render","tabContents","id","title","icon","text","Fragment","breadCrumbItems","label","path","active","lg","className","tabs","map","index","key","href","classnames","onClick","tabId","sm","vertical","pills","PageTitle","to","item"],"mappings":"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","file":"static/js/108.26fd5474.chunk.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardBody, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\n\nimport PageTitle from '../../components/PageTitle';\n\ntype TabsProps = {};\n\ntype TabsState = {\n    activeTab?: string,\n};\nclass Tabs extends Component<TabsProps, TabsState> {\n    constructor(props: TabsProps) {\n        super(props);\n        this.state = { activeTab: '2' };\n        this.toggle = this.toggle.bind(this);\n    }\n\n    /**\n     * Toggle the tab\n     */\n    toggle = (tab: string) => {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    };\n\n    render() {\n        const tabContents = [\n            {\n                id: '1',\n                title: 'Home',\n                icon: 'mdi mdi-home-variant',\n                text:\n                    'Home - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n            },\n            {\n                id: '2',\n                title: 'Profile',\n                icon: 'mdi mdi-account-circle',\n                text:\n                    'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n            },\n            {\n                id: '3',\n                title: 'Settings',\n                icon: 'mdi mdi-settings-outline',\n                text:\n                    'Settings - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n            },\n        ];\n\n        return (\n            <React.Fragment>\n                <PageTitle\n                    breadCrumbItems={[\n                        { label: 'UI', path: '/ui/tabs' },\n                        { label: 'Base UI', path: '/ui/tabs' },\n                        { label: 'Tabs', path: '/ui/tabs', active: true },\n                    ]}\n                    title={'Tabs'}\n                />\n\n                <Row>\n                    <Col lg={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title mb-3\">Default Tabs</h4>\n\n                                <Nav tabs>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <NavItem key={index}>\n                                                <NavLink\n                                                    href=\"#\"\n                                                    className={classnames({ active: this.state.activeTab === tab.id })}\n                                                    onClick={() => {\n                                                        this.toggle(tab.id);\n                                                    }}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-lg-none',\n                                                            'd-block',\n                                                            'mr-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-lg-block\">{tab.title}</span>\n                                                </NavLink>\n                                            </NavItem>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <TabContent activeTab={this.state.activeTab}>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <TabPane tabId={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </TabPane>\n                                        );\n                                    })}\n                                </TabContent>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    {/* tab justified */}\n                    <Col lg={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title mb-3\">Tabs Justified</h4>\n\n                                <Nav tabs className=\"nav-pills bg-nav-pills nav-justified\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <NavItem key={index}>\n                                                <NavLink\n                                                    href=\"#\"\n                                                    className={classnames({ active: this.state.activeTab === tab.id })}\n                                                    onClick={() => {\n                                                        this.toggle(tab.id);\n                                                    }}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-lg-none',\n                                                            'd-block',\n                                                            'mr-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-lg-block\">{tab.title}</span>\n                                                </NavLink>\n                                            </NavItem>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <TabContent activeTab={this.state.activeTab}>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <TabPane tabId={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </TabPane>\n                                        );\n                                    })}\n                                </TabContent>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n                {/* vertical tab */}\n                <Row>\n                    <Col lg={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title mb-3\">Tabs Vertical Left</h4>\n\n                                <Row>\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                                        <Nav tabs vertical pills className=\"flex-column\">\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <NavItem key={index}>\n                                                        <NavLink\n                                                            href=\"#\"\n                                                            className={classnames({\n                                                                active: this.state.activeTab === tab.id,\n                                                            })}\n                                                            onClick={() => {\n                                                                this.toggle(tab.id);\n                                                            }}>\n                                                            <i\n                                                                className={classnames(\n                                                                    tab.icon,\n                                                                    'd-lg-none',\n                                                                    'd-block',\n                                                                    'mr-1'\n                                                                )}></i>\n                                                            <span className=\"d-none d-lg-block\">{tab.title}</span>\n                                                        </NavLink>\n                                                    </NavItem>\n                                                );\n                                            })}\n                                        </Nav>\n                                    </Col>\n                                    <Col sm={9}>\n                                        <TabContent activeTab={this.state.activeTab}>\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <TabPane tabId={tab.id} key={index}>\n                                                        <Row>\n                                                            <Col sm=\"12\">\n                                                                <p className=\"mt-3\">{tab.text}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </TabPane>\n                                                );\n                                            })}\n                                        </TabContent>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col lg={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title mb-3\">Tabs Vertical Right</h4>\n\n                                <Row>\n                                    <Col sm={9}>\n                                        <TabContent activeTab={this.state.activeTab}>\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <TabPane tabId={tab.id} key={index}>\n                                                        <Row>\n                                                            <Col sm=\"12\">\n                                                                <p className=\"mt-3\">{tab.text}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </TabPane>\n                                                );\n                                            })}\n                                        </TabContent>\n                                    </Col>\n\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                                        <Nav tabs vertical pills className=\"flex-column\">\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <NavItem key={index}>\n                                                        <NavLink\n                                                            href=\"#\"\n                                                            className={classnames({\n                                                                active: this.state.activeTab === tab.id,\n                                                            })}\n                                                            onClick={() => {\n                                                                this.toggle(tab.id);\n                                                            }}>\n                                                            <i\n                                                                className={classnames(\n                                                                    tab.icon,\n                                                                    'd-lg-none',\n                                                                    'd-block',\n                                                                    'mr-1'\n                                                                )}></i>\n                                                            <span className=\"d-none d-lg-block\">{tab.title}</span>\n                                                        </NavLink>\n                                                    </NavItem>\n                                                );\n                                            })}\n                                        </Nav>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n                {/* Bordered Tabs */}\n                <Row>\n                    <Col lg={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title mb-3\">Tabs Bordered</h4>\n\n                                <Nav tabs className=\"nav-bordered\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <NavItem key={index}>\n                                                <NavLink\n                                                    href=\"#\"\n                                                    className={classnames({ active: this.state.activeTab === tab.id })}\n                                                    onClick={() => {\n                                                        this.toggle(tab.id);\n                                                    }}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-lg-none',\n                                                            'd-block',\n                                                            'mr-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-lg-block\">{tab.title}</span>\n                                                </NavLink>\n                                            </NavItem>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <TabContent activeTab={this.state.activeTab}>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <TabPane tabId={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </TabPane>\n                                        );\n                                    })}\n                                </TabContent>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    {/* tab justified */}\n                    <Col lg={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title mb-3\">Tabs Bordered Justified</h4>\n\n                                <Nav tabs className=\"nav-justified nav-bordered\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <NavItem key={index}>\n                                                <NavLink\n                                                    href=\"#\"\n                                                    className={classnames({ active: this.state.activeTab === tab.id })}\n                                                    onClick={() => {\n                                                        this.toggle(tab.id);\n                                                    }}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-lg-none',\n                                                            'd-block',\n                                                            'mr-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-lg-block\">{tab.title}</span>\n                                                </NavLink>\n                                            </NavItem>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <TabContent activeTab={this.state.activeTab}>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <TabPane tabId={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </TabPane>\n                                        );\n                                    })}\n                                </TabContent>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Tabs;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}