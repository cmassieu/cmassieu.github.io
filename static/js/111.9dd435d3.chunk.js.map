{"version":3,"sources":["layouts/Auth.js"],"names":["DefaultLayout","Component","componentDidMount","document","body","classList","add","componentWillUnmount","remove","render","children","this","props","fallback","className","connect"],"mappings":"yGACA,mCAaA,MAAMA,UAAsBC,YAA+B,eAAD,oBAItDC,kBAAoB,KACZC,SAASC,MAAMD,SAASC,KAAKC,UAAUC,IAAI,sBALG,KAWtDC,qBAAuB,KACfJ,SAASC,MAAMD,SAASC,KAAKC,UAAUG,OAAO,sBAGtDC,SACI,MAAMC,EAAWC,KAAKC,MAAMF,UAAY,KACxC,OAAO,kBAAC,WAAD,CAAUG,SAvBH,yBAAKC,UAAU,iBAuBUJ,IAIhCK,wBAAUf","file":"static/js/111.9dd435d3.chunk.js","sourcesContent":["// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\n// const Footer = React.lazy(() => import(\"./Footer\"));\n// loading\nconst loading = () => <div className=\"text-center\"></div>;\n\ntype DefaultLayoutProps = {\n    children?: any,\n};\n\nclass DefaultLayout extends Component<DefaultLayoutProps> {\n    /**\n     * On component update - update layout\n     */\n    componentDidMount = () => {\n        if (document.body) document.body.classList.add('authentication-bg');\n    };\n\n    /**\n     * On component unmount - reset layout\n     */\n    componentWillUnmount = () => {\n        if (document.body) document.body.classList.remove('authentication-bg');\n    };\n\n    render() {\n        const children = this.props.children || null;\n        return <Suspense fallback={loading()}>{children}</Suspense>;\n    }\n}\n\nexport default connect()(DefaultLayout);\n"],"sourceRoot":""}