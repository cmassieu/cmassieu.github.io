{"version":3,"sources":["pages/uikit/RangeSliders.js","components/PageTitle.js"],"names":["RangeSliders","props","onSlide","index","value","percent","selectedVals","state","textValue","toFixed","setState","onSlide2","selectedRanges","1","2","bind","Fragment","breadCrumbItems","label","path","active","title","xl","className","range","min","max","start","connect","render","handle","un","this","step","Component","PageTitle","to","map","item","key"],"mappings":"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","file":"static/js/118.de537758.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport Nouislider from 'nouislider-react';\nimport 'nouislider/distribute/nouislider.css';\n\nimport PageTitle from '../../components/PageTitle';\n\n// RangeSliders\nclass RangeSliders extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedVals: { 1: { textValue: 20, percent: 20 }, 2: { textValue: 20, percent: 20 } },\n            selectedRanges: { 1: '20-45', 2: '20-45' },\n        };\n\n        this.onSlide = this.onSlide.bind(this);\n        this.onSlide2 = this.onSlide2.bind(this);\n    }\n\n    onSlide = (index, value, percent) => {\n        let selectedVals = { ...this.state.selectedVals };\n        selectedVals[index] = {\n            textValue: value[0].toFixed(2),\n            percent: percent[0].toFixed(2),\n        };\n        this.setState({ selectedVals: selectedVals });\n    };\n\n    onSlide2 = (index, value) => {\n        let selectedRanges = { ...this.state.selectedRanges };\n        selectedRanges[index] = value[0].toFixed(2) + '-' + value[1].toFixed(2);\n        this.setState({ selectedRanges: selectedRanges });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageTitle\n                    breadCrumbItems={[\n                        { label: 'UI', path: '/ui/rangesliders' },\n                        { label: 'Extended UI', path: '/ui/rangesliders' },\n                        { label: 'Range Sliders', path: '/ui/rangesliders', active: true },\n                    ]}\n                    title={'Range Sliders'}\n                />\n\n                <Row>\n                    <Col xl={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title\">Single</h4>\n                                <p className=\"text-muted font-14\">Slider with single selecrtor</p>\n\n                                <Nouislider\n                                    range={{ min: 0, max: 100 }}\n                                    start={[20]}\n                                    connect\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide(1, value, percent)}\n                                />\n                                <p className=\"mt-2 mb-0\">\n                                    Value:{' '}\n                                    {this.state.selectedVals ? (\n                                        <span>\n                                            {this.state.selectedVals[1]['textValue']}, &nbsp;\n                                            {this.state.selectedVals[1]['percent']}%\n                                        </span>\n                                    ) : null}\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title\">Range</h4>\n                                <p className=\"text-muted font-14\">Slider with range selecrtor</p>\n\n                                <Nouislider\n                                    range={{ min: 10, max: 150 }}\n                                    start={[20, 45]}\n                                    connect\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide2(1, value)}\n                                />\n                                <p className=\"mt-2 mb-0\">\n                                    Value:{' '}\n                                    {this.state.selectedRanges ? <span>{this.state.selectedRanges[1]}</span> : null}\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title\">Slider Step</h4>\n                                <p className=\"text-muted font-14\">Slider with step value</p>\n\n                                <Nouislider\n                                    range={{ min: 0, max: 100 }}\n                                    start={[20]}\n                                    step={10}\n                                    connect\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide(2, value, percent)}\n                                />\n                                <p className=\"mt-2 mb-0\">\n                                    Value:{' '}\n                                    {this.state.selectedVals ? (\n                                        <span>\n                                            {this.state.selectedVals[2]['textValue']}, &nbsp;\n                                            {this.state.selectedVals[2]['percent']}%\n                                        </span>\n                                    ) : null}\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title\">Range Slider with Steps</h4>\n                                <p className=\"text-muted font-14\">Slider with range selecrtor with fixed step value</p>\n\n                                <Nouislider\n                                    range={{ min: 10, max: 150 }}\n                                    start={[20, 45]}\n                                    step={15}\n                                    connect\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide2(2, value)}\n                                />\n                                <p className=\"mt-2 mb-0\">\n                                    Value:{' '}\n                                    {this.state.selectedRanges ? <span>{this.state.selectedRanges[2]}</span> : null}\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default RangeSliders;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">e-BRS</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}