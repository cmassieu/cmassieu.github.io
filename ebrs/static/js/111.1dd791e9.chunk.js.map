{"version":3,"sources":["pages/apps/Projects/Gantt/data.js","pages/apps/Projects/Gantt/index.js","components/PageTitle.js"],"names":["tasks","id","name","start","end","progress","dependencies","projects","status","icon","Project","project","onSelectProject","selectedProject","to","className","onClick","e","Media","classNames","body","ProjectGannt","useState","projectsData","setSelectedProject","mode","setMode","gantt","setGantt","useEffect","Gantt","tasksData","view_modes","bar_height","padding","view_mode","custom_popup_html","task","end_date","Fragment","PageTitle","breadCrumbItems","label","path","active","title","Card","CardBody","Row","Col","xl","type","placeholder","style","maxHeight","width","map","idx","key","p","ButtonGroup","m","Button","color","size","change_view_mode","changeMode","props","item","index"],"mappings":"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","file":"static/js/111.1dd791e9.chunk.js","sourcesContent":["const tasks = [\n    {\n        id: '1',\n        name: 'Draft the new contract document for sales team',\n        start: '2019-07-16',\n        end: '2019-07-20',\n        progress: 55,\n    },\n    {\n        id: '2',\n        name: 'Find out the old contract documents',\n        start: '2019-07-19',\n        end: '2019-07-21',\n        progress: 85,\n        dependencies: '1',\n    },\n    {\n        id: '3',\n        name: 'Organize meeting with sales associates to understand need in detail',\n        start: '2019-07-21',\n        end: '2019-07-22',\n        progress: 80,\n        dependencies: '2',\n    },\n    {\n        id: '4',\n        name: 'iOS App home page',\n        start: '2019-07-15',\n        end: '2019-07-17',\n        progress: 80,\n    },\n    {\n        id: '5',\n        name: 'Write a release note',\n        start: '2019-07-18',\n        end: '2019-07-22',\n        progress: 65,\n        dependencies: '4',\n    },\n    {\n        id: '6',\n        name: 'Setup new sales project',\n        start: '2019-07-20',\n        end: '2019-07-31',\n        progress: 15,\n    },\n    {\n        id: '7',\n        name: 'Invite user to a project',\n        start: '2019-07-25',\n        end: '2019-07-26',\n        progress: 99,\n        dependencies: '6',\n    },\n    {\n        id: '8',\n        name: 'Coordinate with business development',\n        start: '2019-07-28',\n        end: '2019-07-30',\n        progress: 35,\n        dependencies: '7',\n    },\n    {\n        id: '9',\n        name: 'Kanban board design',\n        start: '2019-08-01',\n        end: '2019-08-03',\n        progress: 25,\n        dependencies: '8',\n    },\n    {\n        id: '10',\n        name: 'Enable analytics tracking',\n        start: '2019-08-05',\n        end: '2019-08-07',\n        progress: 60,\n        dependencies: '9',\n    },\n];\n\nconst projects = [\n    {\n        id: 'proj101',\n        name: 'Lunar',\n        status: 'On-Track',\n        icon: 'uil uil-moonset',\n    },\n    {\n        id: 'proj102',\n        name: 'Dark Moon',\n        status: 'On-Track',\n        icon: 'uil uil-moon-eclipse',\n    },\n    {\n        id: 'proj103',\n        name: 'Aurora',\n        status: 'Locked',\n        icon: 'uil uil-mountains',\n    },\n    {\n        id: 'proj104',\n        name: 'Blue Moon',\n        status: 'Locked',\n        icon: 'uil uil-moon',\n    },\n    {\n        id: 'proj105',\n        name: 'Casanova',\n        status: 'Delayed',\n        icon: 'uil uil-ship',\n    },\n    {\n        id: 'proj106',\n        name: 'Darwin',\n        status: 'On-Track',\n        icon: 'uil uil-subway-alt',\n    },\n    {\n        id: 'proj107',\n        name: 'Eagle',\n        status: 'Delayed',\n        icon: 'uil uil-gold',\n    },\n];\n\nexport { projects, tasks };\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Media, Button, ButtonGroup } from 'reactstrap';\nimport classNames from 'classnames';\nimport SimpleBar from 'simplebar-react';\nimport Gantt from 'frappe-gantt/src/';\n\nimport PageTitle from '../../../../components/PageTitle';\nimport { projects as projectsData, tasks as tasksData } from './data';\n\nconst Project = ({ project, onSelectProject, selectedProject }) => {\n    return (\n        <Link to=\"#\" className=\"text-body\" onClick={e => onSelectProject(project)}>\n            <Media\n                className={classNames('mt-2', 'p-2', {\n                    'bg-light': selectedProject && selectedProject.id === project.id,\n                })}>\n                <div className=\"avatar-sm\">\n                    {project.status === 'On-Track' && (\n                        <span className=\"avatar-title bg-success-lighten rounded-circle text-success\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n\n                    {project.status === 'Locked' && (\n                        <span className=\"avatar-title bg-warning-lighten rounded-circle text-warning\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n\n                    {project.status === 'Delayed' && (\n                        <span className=\"avatar-title bg-danger-lighten rounded-circle text-danger\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n                </div>\n                <Media body className=\"ml-2\">\n                    <h5 className=\"mt-0 mb-0\">\n                        {project.name}\n                        <span\n                            className={classNames('badge', 'ml-1', {\n                                'badge-success-lighten': project.status === 'On-Track',\n                                'badge-warning-lighten': project.status === 'Locked',\n                                'badge-danger-lighten': project.status === 'Delayed',\n                            })}>\n                            {project.status}\n                        </span>\n                    </h5>\n                    <p className=\"mt-1 mb-0 text-muted\">ID: {project.id}</p>\n                </Media>\n            </Media>\n        </Link>\n    );\n};\n\nconst ProjectGannt = () => {\n    const [projects] = useState([...projectsData]);\n    const [selectedProject, setSelectedProject] = useState(projectsData[1]);\n    const [mode, setMode] = useState('Week');\n    const [gantt, setGantt] = useState(null);\n\n    const modes = ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'];\n\n    useEffect(() => {\n        const gantt = new Gantt('#tasks-gantt', [...tasksData], {\n            view_modes: ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'],\n            bar_height: 20,\n            padding: 18,\n            view_mode: 'Week',\n            custom_popup_html(task) {\n                return (\n                    '<div class=\"popover fade show bs-popover-right gantt-task-details\" role=\"tooltip\">' +\n                    '<div class=\"arrow\"></div><div class=\"popover-body\">' +\n                    `<h5>${task.name}</h5><p class=\"mb-2\">Expected to finish by ${task.end_date}</p>` +\n                    '<div class=\"progress mb-2\" style=\"height: 10px;\">' +\n                    // tslint:disable-next-line: max-line-length\n                    `<div class=\"progress-bar\" role=\"progressbar\" style=\"width: ${task.progress}%;\" aria-valuenow=\"${task.progress}\"` +\n                    ` aria-valuemin=\"0\" aria-valuemax=\"100\">${task.progress}%</div>` +\n                    '</div></div></div>'\n                );\n            },\n        });\n        setGantt(gantt);\n    }, []);\n\n    /**\n     * On mode change\n     * @param {*} mode\n     */\n    const changeMode = mode => {\n        setMode(mode);\n        if (gantt) {\n            gantt.change_view_mode(mode);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Projects', path: '/apps/projects' },\n                    { label: 'Gantt', path: '/apps/projects/gantt', active: true },\n                ]}\n                title={'Gantt'}\n            />\n\n            <Card>\n                <CardBody>\n                    <Row>\n                        <Col xl={3}>\n                            <div className=\"pr-xl-3\">\n                                <h5 className=\"mt-0 mb-3\">Projects</h5>\n                                <div className=\"app-search\">\n                                    <form>\n                                        <div className=\"form-group position-relative\">\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"search by name...\"\n                                            />\n                                            <span className=\"mdi mdi-magnify\"></span>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <Row>\n                                    <Col>\n                                        <SimpleBar style={{ maxHeight: '535px', width: '100%' }}>\n                                            {projects.map((project, idx) => {\n                                                return (\n                                                    <Project\n                                                        project={project}\n                                                        key={idx}\n                                                        selectedProject={selectedProject}\n                                                        onSelectProject={p => setSelectedProject(p)}></Project>\n                                                );\n                                            })}\n                                        </SimpleBar>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n\n                        <Col xl={9} className=\"mt-4 mt-xl-0\">\n                            <div className=\"pl-xl-3\">\n                                <Row>\n                                    <Col className=\"col-auto\">\n                                        <Link to=\"#\" className=\"btn btn-success btn-sm mb-2\">\n                                            Add New Task\n                                        </Link>\n                                    </Col>\n                                    <Col className=\"text-sm-right\">\n                                        <ButtonGroup>\n                                            {modes.map((m, idx) => {\n                                                return (\n                                                    <Button\n                                                        color=\"light\"\n                                                        size={'sm'}\n                                                        key={idx}\n                                                        onClick={() => changeMode(m)}\n                                                        active={mode === m}>\n                                                        {m}\n                                                    </Button>\n                                                );\n                                            })}\n                                        </ButtonGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col className=\"mt-3\">\n                                        <svg id=\"tasks-gantt\"></svg>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n                </CardBody>\n            </Card>\n        </React.Fragment>\n    );\n};\n\nexport default ProjectGannt;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">e-BRS</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}